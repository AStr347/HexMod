#ifndef MACS_H
#define MACS_H
#include "arch.h"
//defines for puls mac
// 8 decimal numbers
#define DECDIV(a, n) (a%n)
#define CORRECTLEFT(a) ((a==1)?(3):(0))
#define CORRECT(a) ((a==2)?(1):(CORRECTLEFT(a)))

#define CORRECT_PACK_0(a) ((CORRECT(DECDIV(a,10UL))<<(6)))
#define CORRECT_PACK_1(a) ((CORRECT(DECDIV(a,100UL)/10L))<<(4))
#define CORRECT_PACK_2(a) ((CORRECT(DECDIV(a,1000UL)/100L))<<(2))
#define CORRECT_PACK_3(a) ((CORRECT(DECDIV(a,10000UL)/1000L))<<(0))

#define TRITGEN4(a) (CORRECT_PACK_3(a)|CORRECT_PACK_2(a)|CORRECT_PACK_1(a)|CORRECT_PACK_0(a))
#define TRITGEN(b,a) (TRITGEN4(b)|(TRITGEN4(a)<<8))

#define ADRESS_PREFFIX  2222L

#define MACS_COUNT 50

//work
static const u32 macs[MACS_COUNT] = {
	(TRITGEN(ADRESS_PREFFIX,1010) << 8),
	(TRITGEN(ADRESS_PREFFIX,1011) << 8),
	(TRITGEN(ADRESS_PREFFIX,1012) << 8),
	(TRITGEN(ADRESS_PREFFIX,1020) << 8),
	(TRITGEN(ADRESS_PREFFIX,1021) << 8),
	(TRITGEN(ADRESS_PREFFIX,1022) << 8),
	(TRITGEN(ADRESS_PREFFIX,1100) << 8),
	(TRITGEN(ADRESS_PREFFIX,1101) << 8),
	(TRITGEN(ADRESS_PREFFIX,1102) << 8),
	(TRITGEN(ADRESS_PREFFIX,1110) << 8),
	(TRITGEN(ADRESS_PREFFIX,1111) << 8),
	(TRITGEN(ADRESS_PREFFIX,1112) << 8),
	(TRITGEN(ADRESS_PREFFIX,1120) << 8),
	(TRITGEN(ADRESS_PREFFIX,1121) << 8),
	(TRITGEN(ADRESS_PREFFIX,1122) << 8),
	(TRITGEN(ADRESS_PREFFIX,1200) << 8),
	(TRITGEN(ADRESS_PREFFIX,1201) << 8),
	(TRITGEN(ADRESS_PREFFIX,1202) << 8),
	(TRITGEN(ADRESS_PREFFIX,1210) << 8),
	(TRITGEN(ADRESS_PREFFIX,1211) << 8),
	(TRITGEN(ADRESS_PREFFIX,1212) << 8),
	(TRITGEN(ADRESS_PREFFIX,1220) << 8),
	(TRITGEN(ADRESS_PREFFIX,1221) << 8),
	(TRITGEN(ADRESS_PREFFIX,1222) << 8),
	(TRITGEN(ADRESS_PREFFIX,2000) << 8),
	(TRITGEN(ADRESS_PREFFIX,2001) << 8),
	(TRITGEN(ADRESS_PREFFIX,2002) << 8),
	(TRITGEN(ADRESS_PREFFIX,2010) << 8),
	(TRITGEN(ADRESS_PREFFIX,2011) << 8),
	(TRITGEN(ADRESS_PREFFIX,2012) << 8),
	(TRITGEN(ADRESS_PREFFIX,2020) << 8),
	(TRITGEN(ADRESS_PREFFIX,2021) << 8),
	(TRITGEN(ADRESS_PREFFIX,2022) << 8),
	(TRITGEN(ADRESS_PREFFIX,2100) << 8),
	(TRITGEN(ADRESS_PREFFIX,2101) << 8),
	(TRITGEN(ADRESS_PREFFIX,2102) << 8),
	(TRITGEN(ADRESS_PREFFIX,2110) << 8),
	(TRITGEN(ADRESS_PREFFIX,2111) << 8),
	(TRITGEN(ADRESS_PREFFIX,2112) << 8),
	(TRITGEN(ADRESS_PREFFIX,2120) << 8),
	(TRITGEN(ADRESS_PREFFIX,2121) << 8),
	(TRITGEN(ADRESS_PREFFIX,2122) << 8),
	(TRITGEN(ADRESS_PREFFIX,2200) << 8),
	(TRITGEN(ADRESS_PREFFIX,2201) << 8),
	(TRITGEN(ADRESS_PREFFIX,2202) << 8),
	(TRITGEN(ADRESS_PREFFIX,2210) << 8),
	(TRITGEN(ADRESS_PREFFIX,2211) << 8),
	(TRITGEN(ADRESS_PREFFIX,2212) << 8),
	(TRITGEN(ADRESS_PREFFIX,2220) << 8),
	(TRITGEN(ADRESS_PREFFIX,2221) << 8),
};


static const char names_macs[MACS_COUNT][5] = {
	/* uprt names */
	"6510", //1010
	"6511", //1011
	"6512", //1012
	"6513", //1020
	"6514", //1021
	"6515", //1022
	"6516", //1100
	"6517", //1101
	"6518", //1102
	"6519", //1110
	"6520", //1111
	"6521", //1112
	"6522", //1120
	"6523", //1121
	"6524", //1122
	"6525", //1200
	"6526", //1201
	"6527", //1202
	"6528", //1210
	"6529", //1211
	"6530", //1212
	"6531", //1220
	"6532", //1221
	"6533", //1222
	"6534", //2000
	"6535", //2001
	"6536", //2002
	"6537", //2010
	"6538", //2011
	"6539", //2012
	"6540", //2020
	"6541", //2021
	"6542", //2022
	"6543", //2100
	"6544", //2101
	"6545", //2102
	"6546", //2110
	"6547", //2111
	"6548", //2112
	"6549", //2120
	"6550", //2121
	"6551", //2122
	"6552", //2200
	"6553", //2201
	"6554", //2202
	"6555", //2210
	"6556", //2211
	"6557", //2212
	"6558", //2220
	"6559", //2221
};

#endif // !MACS_H

